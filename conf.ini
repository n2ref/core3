; ################################################################################
; ##                Configuration Settings for Core2                            ##
; ################################################################################

; ## Legend
; ## The following notations at the beginning of each line may be used to
; ## ## Titles, subtitles etc
; ## ## More information - Description, Docs, Links, Issues etc.
; ## Configuration settings have a single ; followed by a single space at the
; ## beginning; Remove them to enable the setting.

[production]
; ## Текущая версия ядра
version = 2.8.1

; ## Используется в модуле webservice
; ## Время в секундах на которое выписывается вебтокен пользователя
webtoken.expiration = 604800
; ### mail server
; mail.server = 127.0.0.1

; ### system settings
; system.timezone = Europe/Minsk
; system.name     =
; system.logo     = logo.png
; system.host     = example.com
; system.https    = false
; ### system skin (folder name from core2/html)
; system.theme.name         = default
; system.theme.bg_color     = "#d32f2f"
; system.theme.border_color = "#ff9800"
; system.theme.text_color   = "#ffebee"

; ################################################################################
; ## Log settings
; ################################################################################

; ## Адрес для логирования приложения через webhook в slack чат
; ## Follow manual https://api.slack.com/tutorials/slack-apps-hello-world
; log.webhook.slack.url = https://hooks.slack.com/services/

; ## Путь к файлу в который будет вестись логирование приложения
; log.system.file = ../logs/app.log

; ################################################################################
; ## Cache settings
; ################################################################################

; # see https://github.com/laminas/laminas-cache
; ### Filesystem Адаптер
cache.adapter = Filesystem
; Настройки для кэширование при помощи адаптера Filesystem
cache.options.cache_dir = cache
; ### Redis Адаптер
; cache.options.server.host = 127.0.0.1
; cache.options.server.port = 6379
; ### memcached Адаптер

; ################################################################################
; ## Session settings
; ################################################################################
; ### integer	Specifies time-to-live for cached session pages in minutes.
;session.cache_expire = 180
; ### boolean	Marks the cookie as accessible only through the HTTP protocol.
session.cookie_httponly = true
; ### integer	Specifies the lifetime of the cookie in seconds which is sent to the browser.
;session.cookie_lifetime = 0
; ### string	Specifies path to set in the session cookie.
;session.cookie_path = /
; ### string	Specifies whether cookies should be sent along with cross-site requests. (Lax и Strict)
;session.cookie_samesite =
; ### boolean	Specifies whether cookies should only be sent over secure connections.
;session.cookie_secure = off
; ### integer	Specifies the number of seconds after which data will be seen as ‘garbage’.
;session.gc_maxlifetime = 1440
; ### integer	Defines the probability that the gc process is started on every session initialization.
;session.gc_divisor = 100
; ### integer	Defines the probability that the gc process is started on every session initialization.
;session.gc_probability = 1
; ###	string	Specifies the name of the session which is used as cookie name.
session.name = CORE2SESSID
; ### string	Defines the argument which is passed to the save handler.
;session.save_path = /var/lib/php/sessions

; ################################################################################
; ## MySQL settings
; ################################################################################

; ## Профилирование Mysql запросов
; log.profile.on = true

; ## Адрес файла куда будет сохраняться лог запросов
; ## Относительно каталога в котором находится система
; log.profile.mysql = ../logs/mysql-profile.log


; ################################################################################
; ## Registration and authorization
; ################################################################################

; ### Registration ###############################################################

; ### is registration available
; registration.on = true

; ### user role which be used by default
; ### can be set in app conf.ini
; registration.role_id =

; ### Модуль управляющий регистрацией
; ### Для управления указанный модуль должен имплементировать интерфейс Registration
; registration.module =

; ### Поля по умолчанию необходимые для регистрации
; ### Может быть другой набор, если задан модуль управляющий регистрацией (registration.module)
; registration.fields.name.title     = Имя
; registration.fields.name.required  = true
; registration.fields.login.title    = Логин
; registration.fields.login.required = true
; registration.fields.email.title    = Email
; registration.fields.email.required = true
; registration.fields.email.type     = email

; ### Доступна или нет страница восстановления пароля
; ### По умолчанию false
; ### Для ее работы так же необходимо задать настройки:
; ###   - mail.server
; restore.on = true

; ### Модуль управляющий восстановлением паролей
; ### Для управления указанный модуль должен имплементировать интерфейс Restore
; restore.module =

; ### Authorization ################################################################

; ### Указывает о возможности входа используя пароль
auth.pass.on = true

; ### Указывает о возможности входа используя сертификат
auth.x509.on = false

; ### Модуль отвечающий за дополнительные виды авторизации
; ### Для управления указанный модуль должен имплементировать интерфейс Auth
; ### Нужно настроить какой-либо метод для аутентификации, иначе в модуле не будет смысла
auth.module = auth

; ### LDAP
; ### Должен быть указан модуль, который будет производить аутентификацию auth.module
auth.ldap.on = false
; ### Логины людей для которых при первом входе будут созданы пользователи с доступом администратора
; auth.ldap.admins.1 =
; ### Роль пользователя для регистрации при входе через Ldap
; auth.ldap.role_id =
; ### Опции для подключения к Ldap серверу
; ### Можно использовать параметры, которые описаны на странице https://docs.laminas.dev/laminas-authentication/adapter/ldap/
; auth.ldap.admin =
; auth.ldap.host = example.com
; auth.ldap.port = 389
; auth.ldap.username =
; auth.ldap.password =
; auth.ldap.useStartTls = false
; auth.ldap.accountDomainName = example.com
; auth.ldap.accountDomainNameShort =
; auth.ldap.accountCanonicalForm = 3
; auth.ldap.baseDn = "DC=example.com,DC=loc"

; ### Social networks
; ### Роль пользователя для регистрации при входе через соц сеть
; auth.social.role_id =

; ####  Vkontakte
; #### Должен быть указан модуль, который будет производить аутентификацию auth.module
; #### Активен или нет вход через эту соц сеть
; auth.social.vk.on = false
; #### Обязательные параметры получаемые после создания приложения в соц сети
; auth.social.vk.app_id       =
; auth.social.vk.api_secret   =
; #### Адрес страницы для редиректа пользователя после авторизации в соц сети
; #### По умолчанию https://domain.com/?core=auth_vk
; auth.social.vk.redirect_url =

; #### Facebook
; #### Должен быть указан модуль, который будет производить аутентификацию auth.module
; #### Активен или нет вход через эту соц сеть
auth.social.fb.on = false
; #### Обязательные параметры получаемые после создания приложения в соц сети
auth.social.fb.app_id       =
auth.social.fb.api_secret   =
; #### Адрес страницы для редиректа пользователя после авторизации в соц сети
; #### По умолчанию https://domain.com/?core=auth_fb
auth.social.fb.redirect_url =


; #### Одноклассники
; #### Должен быть указан модуль, который будет производить аутентификацию auth.module
; #### Активен или нет вход через эту соц сеть
auth.social.ok.on = false
; #### Обязательные параметры получаемые после создания приложения в соц сети
; #### У приложения в Одноклассниках должен быть доступ к Email
; #### Для этого, после создания приложения, у них нужно запросить этот доступ написав письмо им на email
auth.social.ok.app_id       =
auth.social.ok.public_key   =
auth.social.ok.secret_key   =
; #### Адрес страницы для редиректа пользователя после авторизации в соц сети
; #### По умолчанию https://domain.com/?core=auth_ok
auth.social.ok.redirect_url =

; ################################################################################
; ## Worker settings
; ################################################################################

; workers can be found in this dir
; separate multiple dirs with a comma
; multiple dirs only supported by pecl workers
; gearman.worker_dir = ./workers

; All workers in worker_dir will be loaded
gearman.include=*

; 10 workers will do all jobs
gearman.count=10

; Each job will have minimum 1 worker
; that does only that job
gearman.dedicated_count=1

; Workers will only live for 1 hour
gearman.max_worker_lifetime=3600

; Reload workers as new code is available
gearman.auto_update=1

; Timeout n seconds for all jobs before work is reissued to another worker
gearman.timeout = 300

; Other configuration options
; gearman.auto_update - If non-zero, workers are restarted when worker code changes, defaults to on
; gearman.exclude - A list of workers in worker_dir to exclude
gearman.host = "127.0.0.1:4730"
; gearman.log_file - Path to log file or syslog
; gearman.max_runs_per_worker - Maximum number of jobs a worker will process before restarting
; gearman.pid_file - Path to the file where the pid will be stored for the main process
; gearman.prefix - Prefix for class names used by workers
; gearman.user - System user to run as
; gearman.worker_restart_splay - Number of seconds to stagger restarting and launching of workers to prevent all workers dying at once

; gearman.functions.workhorse.param - specific function parameters